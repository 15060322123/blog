{"meta":{"title":"樱花🌸","subtitle":null,"description":"樱花🌸，小坏孩的小博客","author":"小坏孩","url":"/https://www.sakura521.cn"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-02-23T05:34:32.165Z","comments":false,"path":"about/index.html","permalink":"/https://www.sakura521.cn/about/index.html","excerpt":"","text":"[さくら荘の小坏孩] 与&nbsp; 小坏孩&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-02-22T14:19:07.207Z","comments":false,"path":"bangumi/index.html","permalink":"/https://www.sakura521.cn/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"client/index.html","permalink":"/https://www.sakura521.cn/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"donate/index.html","permalink":"/https://www.sakura521.cn/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"comment/index.html","permalink":"/https://www.sakura521.cn/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"lab/index.html","permalink":"/https://www.sakura521.cn/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-02-20T13:04:38.052Z","comments":false,"path":"music/index.html","permalink":"/https://www.sakura521.cn/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"links/index.html","permalink":"/https://www.sakura521.cn/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"tags/index.html","permalink":"/https://www.sakura521.cn/tags/index.html","excerpt":"","text":""},{"title":"[object Object]","date":"2020-02-21T04:35:35.772Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"scaffolds/post.html","permalink":"/https://www.sakura521.cn/scaffolds/post.html","excerpt":"","text":"","keywords":null},{"title":"[object Object]","date":"2020-02-21T04:35:29.122Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"scaffolds/draft.html","permalink":"/https://www.sakura521.cn/scaffolds/draft.html","excerpt":"","text":""},{"title":"[object Object]","date":"2020-02-21T04:35:33.311Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"scaffolds/page.html","permalink":"/https://www.sakura521.cn/scaffolds/page.html","excerpt":"","text":"","keywords":null},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"video/index.html","permalink":"/https://www.sakura521.cn/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-11-16T09:29:49.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/https://www.sakura521.cn/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-11-16T09:29:49.000Z","comments":true,"path":"rss/index.html","permalink":"/https://www.sakura521.cn/rss/index.html","excerpt":"","text":""}],"posts":[{"title":"RSS 介绍","slug":"RSS-介绍","date":"2020-02-28T12:56:45.000Z","updated":"2020-02-29T12:20:35.317Z","comments":true,"path":"2020/02/28/RSSExplanation.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/28/RSSExplanation.html","excerpt":"","text":"RSS​ RSS（简易信息聚合）是一种消息来源格式规范，用以聚合经常发布更新数据的网站，例如博客文章、新闻、音频或视频的网摘。RSS文件（或称做摘要、网络摘要、或频更新，提供到频道）包含全文或是节录的文字，再加上发布者所订阅之网摘数据和授权的元数据。 ​ “资源描述框架站点摘要”（RDF Site Summary）就是RSS的英文原意，后来通过逆向首字母缩略词变更为Really Simple Syndication“简易信息聚合”。把新闻标题、摘要（Feed）、内容按照用户的要求，“送”到用户的桌面就是RSS的目的。RSS一词有时候大体上意为社会性书签，包括各种RSS的不同格式。例如，Blogspace对使用网摘于一集成器内之动作标为RSS info和RSS reader。虽然它的第一个句子就包含明确的Atom)格式：“RSS和Atom文件能够用简单的格式从网站更新消息至你的电脑！” ​ RSS摘要可以借由RSS阅读器、feed reader或是aggregator等网页或以桌面为架构的软件来阅读。标准的XML档式可允许信息在一次发布后透过不同的程序阅览。用户借由将网摘输入RSS阅读器或是用鼠标点取浏览器上指向订阅程序的RSS小图标之URI（非通常称为URL）来订阅网摘。RSS阅读器定期检阅是否有更新，然后下载给监看用户界面。 RSS可以是以下三种解释中任一种的缩写，但其实这三者都是指同一种联合供稿（Syndication）的技术： RSS 2.0（Really Simple Syndication） RSS 0.91, RSS 1.0（RDF（Resource Description Framework）Site Summary） RSS 0.9 and 1.0（Rich Site Summary） 目录版本当前RSS规范的主要版本有0.91、1.0和2.0等。0.91版和1.0版完全不同，风格不同，制定标准的人也不同。0.91版和2.0版一脉相承。1.0版更接近XML标准。当前世界上大多数知名，虽有很多种不同的RSS，但都定型于两个重要的支干（RDF和2.）。RDF或RSS 1.的分支包括下列版本： RSS 0.90原本属于美国网景公司的版本。这个RSS被称为RDF Site Summary，但其基础构图创建在初期的RDF规格上，以及和末版的RDF推荐标准不兼容。 RSS 1.0是一个开放式的版本，由RSS-DEV工作团队再次创建为RDF Site Summary。RSS 1.0是一个像RSS 0.90的RDF形式，但是并没有完全的和他兼容，自从1.0基新闻网站都提供RSS订阅支持。 历史RSS格式采纳之前有过几次web联合化的尝试，但都没有达到广泛的传播。关于重构web站点信息的基本思想可以追溯到早至1995年，当时Ramanathan V. Guha{以及他在苹果公司高科技小组的同事开发出元内容框架。对这些早期发展的更详细讨论，请参见网页联合供稿技术的历史。 RSS的第一个版本为RDF Site Summary，在1999年三月由美国网景公司的Guha为了用在My.Netscape.Com门户网站而开发。这个版本开始以RSS0.9为名。在1999年七月，美国网景公司的Dan Libby发明了新版本RSS 0.91，此版本简化了形式，借由 撤去RDF元素及合并Dave Winer的scriptingNews企业联合组织化格式。Libby并且将此重命名为RSS，全名“Rich Site Summary”，并且在“Futures document”论述了未来的发展形式。 这会是Netscape在RSS八年的研究中最后一次的参与，当RSS被一些想要他们的feeds被用在My.Netscape.Com和其他早期RSS入口的网络出版者环绕，美国“网景”公司下降RSS并支持MY. Netscape.Com在2001年四月期间新主人AOL的重建公司，还取消了支撑格式化的使用帮助文档和工具。 其中，Google Reader曾集成了RSS的分类与自定义标题，网页功能。但于2013年7月15日已终止服务。 发展随着越来越多的站点对RSS的支持，RSS当前已经成为成功的XML应用。RSS搭建了信息迅速传播的一个技术平台，使得每个人都成为潜在的信息提供者。 RSS 2.*的分支包括下列版本： RSS 0.91是一个精简的RSS形式，由美国网景公司所发行，同时也是原创的排行第一的版本编号，由Dave Winer从Userland软件所制作。网景公司的版本现在被称为Rich Site Summary； 这个是不久前的RDF格式，但是相对而言比较不方便使用。 RSS 0.92透过0.94被扩大为RSS 0.91版本，更容易与其他兼容以及和Winer的RSS 0.91版本，但仍然和RSS 0.90不兼容。在所有的Userland RSS 0.9x规格里，RSS不再只是个缩写。 RSS 2.0.1是国内版本编号2.0。RSS 2.0.1虽被声称冻结，但是仍是一个网页然可以快速下载，之后再声称没有改变版本编号。RSS现今代表着简易供稿系统。主要的改变在这个版本里使用伸的机制。 对大部分而言，和较早的版本比较起来（除了无兼容性的RDF语法在0.90），较新的版本接触到各个分支时为逆兼容性，以及大部分的版本严格上来说包括以延伸机构使用XML Namespaces来证明，另一方面正好（在2. 分支）或透过RDF（在1. 分支），大部分的企业联合组织化软件都有支持这两种分支。 模块RSS模块的主要目标是延伸基本的XML概要来获得更健全的内容汇集。此种传承允许更多的变化却又能够符合标准，在不用更改RSS核心之下运行。为了达成此项延伸，严密规范的字汇（在RSS中为“模块”；XML中为“概要”）透过XML namesspace命名各种概念之中的概念。 点对点应用及RSS几种以BitTorrent)为基准和点对点的应用也支持RSS。此种网摘允许客户端的应用程序在侦测到更新时自动下载。 阅读器主条目：聚合器 RSS信息的获取与订阅，可以通过称为聚合器一类的软件或服务来实现。通常情况下RSS阅读器除了客户端软件之外，还存在一类基于Web应用的在线阅读器（例如digg.com）。较常用的有预载于Acer个人电脑当中的易搜比软件、Snarfer。 微软的IE浏览器也可当作RSS阅读器使用，也含有存储的功能。 参见 消息来源 Atom (标准)) XML OPML 参考资料 ^ The application/rss+xml Media Type. Network Working Group. 2006-05-22 [2007-08-16]. 外部链接 RSS 0.90 Specification RSS 0.91 Specification RSS 1.0 Specifications RSS 2.0 Specification History of the RSS Fork (Mark Pilgrim) Building a RSS feed Tutorial with example View RSS feed RSS查看器 本文来源RSS 维基百科，自由的百科全书。","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"MySQL 学习笔记","slug":"Mysql-学习笔记","date":"2020-02-28T07:31:03.000Z","updated":"2020-02-29T12:10:33.441Z","comments":true,"path":"2020/02/28/MysqlStudy.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/28/MysqlStudy.html","excerpt":"","text":"下是在知乎找到的Mysql的学习笔记 以下是在知乎找到的Mysql的学习笔记 1、 基本操作/* 启动 MySQL */ net start mysql /* 连接与断开服务器 */ mysql -h 地址 -p 端口 -u 用户名 -p 密码 /* 跳过权限验证登陆MySQL */ mysqld --skip-grant-tables -- 修改root密码 密码加密函数password() update mysql.user set password-password(&#39;root&#39;); /* 显示哪些线程正在运行 */ SHOW PROCESSLIST SHOW VARIABLES 2、 数据库的操作/* 数据库的操作 */ -- 查看当前数据库 slect database(); -- 显示当前时间，用户名，数据库版本 select now(),user(),version(); -- 创建数据库 create database[if not exists] 数据库名 数据库选择 数据库选项： CHARACTER SET charset_name COLLATE collation_name -- 查看已有库 show databases[ like &#39;pattern&#39;] -- 查看当前库信息 show create database 数据库名 -- 修改库的选项信息 alter database 库名 选项信息 -- 删除库 drop database[ if exists] 数据库名 同时删除该数据库相关的目录以及目录内容 3、 表的操作/* 表的操作 */ -- 创建表 create [temporary] table [if not exists] [库名.]表名(表的结构定义)[表选项] 每个字段必须有数据类型 最后一个字段后不会有逗号 temporary 临时表，会话结束时表自动消失 对于字段的定义： 字段名 数据类型 [NOT NULL | NULL][DEFAULT default_value][AUTO_INCREMENT][UNIQUE[KEY]]|[PRIMARY]KEY][COMMENT &#39;string&#39;] -- 表选项 -- 字符集 CHARSET = chareset_name 如果表没有设定，则使用数据库字符集 -- 存储引擎 ENGINE = engine_name 表在管理数据时采用的不同的数据结构，结构不同会导致处理方式，提供的特性操作等不同 常见的引擎：InnoDB MyISAM Memory/Heap BDB Merge Examole CSV MaxDB Archive 不同的引擎在保存表的结构和数据时采用不同的方式 MyISAM表文件含义：.frm表定义，.MYD表数据，.MYI表索引 InnoDB表文件含义：.frm表定义，表空间数据和日志文件 SHOW ENGINES -- 显示存储引擎的状态信息 SHOW ENGINE 引擎名{LOGS|STATUS} -- 显示存储引擎的日志或状态信息 -- 数据文件目录 DATA DIRECTORY = ‘目录’ -- 索引文件目录 INDEX DIRECTORY = ‘目录’ -- 表注释 COMMENT = &#39;string&#39; -- 分区选项 PARTITION BY ..(详细见手册) -- 查看所有表 SHOW TABLES[LIKE &#39;pattern&#39;] SHOW TABLES FROM 表名 -- 查看表结构 SHOW CREATE TABLE 表名 （信息更详细） DESC 表名 / DESCRIBE 表名 / EXOLAIN 表名 / SHOW COLUMNS FROM 表名 [LIKE &#39;PATTERN&#39;] SHOW TABLE STATUS [FROM db_name][LIKE &#39;pattern&#39;] -- 修改表 -- 修改表本身的选项 ALTER TABLE 表名 ENGINE = MYISAM; EG: ALTER TABLE 表名 ENGINE=MYISAN; -- 对表进行重命名 RENAME TABLE 原表名 TO 新表名 RENAME TABLE 原表名 TO 库名。表名 -- RENAME 可以交换两个表名 -- 修改表的字段机构 ALTER TABLE 表名 操作名 -- 操作名 ADD[COLUMN] 字段名 -- 增加字段 AFTER 字段 -- 表示增加在该字段名后面 FIRST -- 表示增加在第一个 ADD PRIMARY KEY(字段名) -- 创建主键 ADD UNIQUE [索引名]（字段名） -- 创建一个索引 ADD INDEX [索引名](字段名) -- 创建一个普通索引 ADD DROP [COLUMN] 字段名 -- 删除字段 MODIFY[COLUMN] 字段名 字段属性 -- 支持对字段属性进行修改，不能修改字段名 CHANGE[COLUMN] 原字段名 新字段名 字段属性 -- 支持对字段名修改 DROP PRIMARY KEY -- 删除主键（删除主键前删除其AUTO_INCREMENT属性） DEOP INDEX 索引名 -- 删除索引 DROP FOREIGN KEY 外键 -- 删除外键 -- 删除表 DROP TABLE [IF EXISTS] 表名 ... -- 清空数据 TRUNCATE [TABLE] 表名 -- 复制表结构 CREATE TABLE 表名 LIKE 要复制的表名 -- 复制表结构和数据 CREATE TABLE 表名 [AS] SELECT * FROM 要复制的表 -- 检查表是否有错误 CHECK TABLE tbl_name[,tbl_name]...[option]... -- 优化表 OPTIMIZE[LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name[,tbl_name]... -- 修复表 REPAIR [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [,tbl_name]...[QUICK][EXTENDED][USE_FRM] -- 分析表 ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name[,tbl_name]... 未完 转载原地址知乎： 老夫整理的1000行MySQL学习笔记传授有缘人","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/tags/技术/"},{"name":"java","slug":"java","permalink":"/https://www.sakura521.cn/tags/java/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"Java泛型 学习笔记","slug":"Java泛型-学习笔记","date":"2020-02-27T06:26:22.000Z","updated":"2020-02-29T12:14:23.618Z","comments":true,"path":"2020/02/27/generics.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/27/generics.html","excerpt":"","text":"**Java泛型详解： 和Class的使用。 泛型类，泛型方法的详细使用实例** 一、 引入1、 泛型是什么ArrayList 就是泛型。那ArrayList能完成哪些想不到的功能呢？先看下面这段代码： ArrayList&lt;String&gt; strList = new ArrayList&lt;String&gt;(); ArrayList&lt;Integer&gt; intList = new ArrayList&lt;Integer&gt;(); ArrayList&lt;Double&gt; doubleList = new ArrayList&lt;Double&gt;(); 这里构造了三个List分别装String、Integer和Double；这就是ArrayList的过人之处，既各种类型的变量都可以组装成对应的List。而不必针对每个类型分别实现一个构建ArrayList的类。下面看看如果没有泛型的话，我们要怎么做。 2、 没有泛型会怎样先看下面这段代码： 我们实现两个能够设置点坐标的类，分别设置Integer类型的点坐标和Float类型的点坐标. package cn.sakura.demo; public class Interger { private Integer x; private Integer y; public Integer getX() { return x; } public void setX(Integer x) { this.x = x; } public Integer getY() { return y; } public void setY(Integer y) { this.y = y; } class FloatPoint { private Float x; private Float y; public Float getX() { return x; } public void setX(Float x) { this.x = x; } public Float getY() { return y; } public void setY(Float y) { this.y = y; } } } 发现他们除了变量类型不一样，一个是Integer一个是Float以外，其他并没有是吗区别.下面将两个合成一个。因为Integer和Float都是派生自Object的，下面用代码演示： package cn.sakura.demo; public class ObjectPoint { private Object x; private Object y; public Object getX() { return x; } public void setX(Object x) { this.x = x; } public Object getY() { return y; } public void setY(Object y) { this.y = y; } } 既全部都用Object来代替所有的子类。 在使用的时候是这样： ObjectPoint integerPoint = new ObjectPoint(); integerPoint.setY(new Integer(100)); Integer integerX = (Integer) integerPoint.getX(); 在设置的时候，使用new Integer(100)来创建一个Integer integerPoint.setY(new Integer(100)); 然后在取值的时候，进行强制转换； Integer integerX = (Integer) integerPoint.getX(); 由于在设置的时候，是设置的Integer所以在取值的时候，轻质转换是不会出错的。 同理，FloatPoint的设置和取值也是类似的，代码如下： ObjectPoint floatPoint = new ObjectPoint(); integerPoint.setY(new Float(100,12f)); Integer floatX = (Integer) floatPoint.getX(); 如果改成下面这样也不会报错。 ObjectPoint floatPoint = new ObjectPoint(); integerPoint.setY(new Float(100,12f)); String floatX = (String) floatPoint.getX(); 强制转换时，因为编译器也不知道你传进去的是什么，而floatPoint.get()返回类型是Object，所以编译时，将Object强传成String事成立的。必然不会报错。 而在运行时，则不然，在运行时，floatPoint实例中期明明传进去的是Float类型的变量，非要把他强制转换成String类型，肯定会报类型转换的错误。 那有什么办法在编译阶段，既能合并成同一个，又能在编译时检查出来传回去类型不对呢？ 当然，这就是泛型。 下面将对泛型的写法和做法一一讲解。 二、 各种泛型定义及使用1、 泛型类定义及使用先看看泛型的类是怎么定义的； package cn.sakura.demo; public class Point&lt;T&gt; { private T x; private T y; public T getX() { return x; } public void setX(T x) { this.x = x; } public T getY() { return y; } public void setY(T y) { this.y = y; } @Override public String toString() { return &quot;Point{&quot; + &quot;x=&quot; + x + &quot;, y=&quot; + y + &#39;}&#39;; } public static void main(String[] args) { //IntegerPoint使用 Point&lt;Integer&gt; pointInt = new Point&lt;&gt;(); pointInt.setX(new Integer(100)); System.out.println(pointInt.getX()); //FloatPoint使用 Point&lt;Float&gt; floatPoint = new Point&lt;&gt;(); floatPoint.setX(new Float(100.12f)); System.out.println(floatPoint.getX()); } } 运行结果： 100 100.12 （1）、 定义泛型： PointPoint 既类名后面加一个尖括号，括号里是一个大写字母。这里写的是T，其实这个字母可以是任何大写字母，任何大写字母，意义相同。 （2）、 类中使用泛型这个T表示派生自Object类的任何类，比如String,Integer,Double等等。这里要注意的是，T一定是派生于Object类的。为了方便起见，大家可以在这里把T当成String，既String在类中怎么使用，那T在类中就可以怎么用。下面是定义变量，作为返回值，作为参数传入的定义。 //定义变量 private T x; //作为返回值 public T getX() { return x; } //作为参数 public void setX(T x) { this.x = x; } （3）、 使用泛型类用法： Point&lt;Integer&gt; pointInt = new Point&lt;&gt;(); pointInt.setX(new Integer(100)); System.out.println(pointInt.getX()); Point&lt;Float&gt; floatPoint = new Point&lt;&gt;(); floatPoint.setX(new Float(100.12f)); System.out.println(floatPoint.getX()); 首先，是构造一个实例： Point&lt;String&gt; p = new Point&lt;&gt;(); 这里与普通构造类实例的不同之点在于，普通类构造函数时这样的 Point p =new Point(); 而泛型类的构造则需要在类名后添上，既一对尖括号，中间写上要传入的类型。 因为我们构造时，是这样的：class Point,所以在使用的时候也要在Point后加上类型来定义T代表的意义。 然后在getVar（）和setVar() 时候就没有什么特殊的了，直接调用即可。 从上面的使用时，明显可以看出泛式的作用，在构造泛式的实例的时候： Point&lt;Integer&gt; pointInt = new Point&lt;&gt;(); Point&lt;Float&gt; floatPoint = new Point&lt;&gt;(); 尖括号中，你传进去的是什么，T就代表什么类型。这就是泛型的最大作用，我们只需要考虑逻辑实现，就能拿给各种类来用。 （4）、 使用泛型实现的优势相比较开篇时使用Object的方式，又两个优点： （4.1）、 不用强制转换​ //使用Object作为返回值，要强制转化成指定类型 ​ Float floatX = (Float)floatPoint.getX(); ​ //使用泛型时，不用强制转换，直接出来就是String ​ System.out.println(p.getVar()); （4.2）、 在setX()如果传入类型不对，编译时会报错​ ​ 可以看出，当我们构造时使用的是String，而在setX时，传进去Integer类型时，就会报错，而不是像Object实现方式一样，在运行时才会报强制转换错误。 2、 多泛型变量定义及字母规范（1）、 多泛型变量定义上在我们只定义了一个泛型变量T，那如果我们需要传进去多个泛型呢？ 只需要在类似下面这样就可以了； class morePoint&lt;T,U&gt;{ } 也就是在原来的T后面用逗号隔开，多个就像下面这样： class morePoint&lt;T,U,A,C,B&gt;{ } 举个例子，我们在Point上再加另一个字段name，也可泛型来表示，代码如下： package cn.sakura.demo; public class MorePoint&lt;T, U&gt; { private T x; private T y; private U name; public T getX() { return x; } public void setX(T x) { this.x = x; } public T getY() { return y; } public void setY(T y) { this.y = y; } public U getName() { return name; } public void setName(U name) { this.name = name; } @Override public String toString() { return &quot;morePoint{&quot; + &quot;x=&quot; + x + &quot;, y=&quot; + y + &quot;, name=&quot; + name + &#39;}&#39;; } public static void main(String[] args) { MorePoint&lt;Integer, String&gt; morePoint = new MorePoint&lt;Integer, String&gt;(); morePoint.setName(&quot;sakura&quot;); System.out.println(morePoint.getName()); } } （2）、 字母规范在定义泛型类时，我们已经提到用于指定泛型的变量是一个大写字母： class Point&lt;T&gt;{ ………… } 其中任何大写字母都可以，他们的意义完全相同，但是为了提高可读性，大家默认在不同的情境下使用的字母意义如下： E Element,常用在java，Collection里，如： List,lterator,Set K,V Key,Value,代表Map的键值对 N Number,数字 T Type,类型，如String,Integer等等 3、 泛型接口定义及使用在接口上定义泛型与在类中定义泛型是一样的，代码如下： interface Info&lt;T&gt; { // 在接口上定义泛型 public T getVar(); // 定义抽象方法，抽象方法的返回值就是泛型类型 public void setVar(T x); } 与泛型类的定义一样，也是在接口名后加尖括号； （1）、 使用方法一：非泛型类在使用的时候，就出现了问题，先看看下面的这个使用方法： 未完 转载原网址：https://www.cnblogs.com/jpfss/p/9928747.html","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/tags/技术/"},{"name":"java","slug":"java","permalink":"/https://www.sakura521.cn/tags/java/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"Java8 Lambda表达式 学习笔记","slug":"Java8-Lambda表达式-学习笔记","date":"2020-02-26T06:17:38.000Z","updated":"2020-02-29T12:08:38.109Z","comments":true,"path":"2020/02/26/lambda.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/26/lambda.html","excerpt":"","text":"Java 8 Lambda 表达式Lambda 表达式，也可称为闭包，它是推动 Java 8 发布的最重要新特性。 Lambda 允许把函数作为一个方法的参数（函数作为参数传递进方法中）。 使用 Lambda 表达式可以使代码变的更加简洁紧凑。 语法lambda 表达式的语法格式如下：(parameters) -&gt; expression 或 (parameters) -&gt;{ statements; } 一下是lambda表达式的重要特征： 可选类型声明： 不需要声明参数类型，编译器可以统一识别参数值。 可选的参数圆括号： 一个参数无需定义圆括号，但多个参数需要定义圆括号。 可选的大括号： 如果主体包含了一个语句，就不需要大括号。 可选的返回关键字： 如果主体只有一个表达式返回值则编译器会自动返回值，大括号需要制定明表达式返回了一个数值。 Lambda 表达式实例lambda 表达式的简单例子：//1, 不需要参数，返回值为5 () -&gt; 5 //2, 接收一个参数（数字类型），返回其两倍的值 x -&gt; 2 * x //3, 接收两个参数（数字）,并返回他们的差值 (x,y) -&gt; x - y //4, 接收两个int型整数，返回他们的和 (int x,int y) -&gt; x + y //5,接收一个 String 对象，并在控制台打印，不返回任何值（看起来像是返回void） (String s) -&gt; System.out.print(s) 在lambdaDemo.java 文件的测试：package cn.sakura.demo; public class lambdaDemo { public static void main(String[] args) { lambdaDemo test = new lambdaDemo(); // 类型声明 MathOperation addition = (int x, int y) -&gt; x + y; // 不同类型声明 MathOperation subraction = (x, y) -&gt; x - y; // 大括号中的返回语句 MathOperation multiplication = (int x, int y) -&gt; { return x * y; }; // 没有大括号及返回语句 MathOperation division = (int x, int y) -&gt; x / y; System.out.println(&quot;1+2=&quot; + test.operate(1, 2, addition)); System.out.println(&quot;1-2=&quot; + test.operate(1, 2, subraction)); System.out.println(&quot;1*2=&quot; + test.operate(1, 2, multiplication)); System.out.println(&quot;2/1=&quot; + test.operate(2, 1, division)); // 不用括号 GreetingService greetingService = message -&gt; System.out.println(&quot;https://&quot; + message); // 用括号 GreetingService greetingService2 = (message) -&gt; System.out.println(&quot;Hello&quot; + message); greetingService.sayMessage(&quot;sakura521.cn&quot;); greetingService2.sayMessage(&quot;小坏孩&quot;); } interface MathOperation { int operation(int a, int b); } interface GreetingService { void sayMessage(String message); } private int operate(int a, int b, MathOperation mathOperation) { return mathOperation.operation(a, b); } } 执行结果：1+2=3 1-2=-1 1*2=2 2/1=2 https://sakura521.cn Hello小坏孩 Process finished with exit code 0 使用 Lambda 表达式需要注意一下两点： Lambda 表达式主要用来定义行内执行的方法类型接口，例如，一个简单方法接口。在上面例子中，我们使用各种类型的 Lambda表达式定义MathOperation接口的方法。然后我们定义了sqyMessage的执行。 Lambda 表达式免去了使用匿名方法的麻烦，并且给予Java简单但是强大的函数化的编程能力。 #### 变量作用域lambda 表达式只能引用标记了final的 外层局部变量，这就是说不能在lambda 内部修改定义在域外的局部变量，否则会编译错误。 代码： final static String salutation = &quot;Sakura!&quot;; public static void main(String[] args) { GreetingService greetingService1 = message -&gt; System.out.println(salutation + message); greetingService1.sayMessage(&quot;小坏孩&quot;); } final类 1、final类 final类不能被继承，因此final类的成员方法没有机会被覆盖，默认都是final的。在设计类时候，如果这个类不需要有子类，类的实现细节不允许改变，并且确信这个类不会载被扩展，那么就设计为final类。 2、final方法 如果一个类不允许其子类覆盖某个方法，则可以把这个方法声明为final方法。 使用final方法的原因有二： 第一、把方法锁定，防止任何继承类修改它的意义和实现。 第二、高效。编译器在遇到调用final方法时候会转入内嵌机制，大大提高执行效率。 输出结果：Sakura!小坏孩 我们也可以直接在 lambda 表达式中访问外层的局部变量：public static void main(String[] args) { final int num = 1; Converter&lt;Integer, String&gt; s = (param) -&gt; System.out.println(String.valueOf(param + num)); s.convert(2); } 输出结果：3 易错点：lambda 表达式的局部变量可以不声明为final,但是绝对不能在后面在进行代码修改（即隐形的具有final的语义） int num = 1; Converter&lt;Integer, String&gt; s = (param) -&gt; System.out.println(String.valueOf(param + num)); s.convert(2); num = 5; //报错信息：Local variable num defined in an enclosing scope must be final or effectively final 在Lambda 表达式当中不允许声明一个与局部变量同名的参数和局部变量。 String first = &quot;&quot;; Comparator&lt;String&gt; comparator = (first, second) -&gt; Integer.compare(first.length(), second.length()); //编译会出错","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/tags/技术/"},{"name":"java","slug":"java","permalink":"/https://www.sakura521.cn/tags/java/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"java中Map及Map.Entry详解 学习笔记","slug":"java中Map及Map-Entry详解-学习笔记","date":"2020-02-25T08:04:21.000Z","updated":"2020-02-29T12:09:44.497Z","comments":true,"path":"2020/02/25/map.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/25/map.html","excerpt":"","text":"Java 高级for循环 学习笔记说明：Map是java中的接口，Map.Entry是Map的一个内部接口。 Map提供了一些常用方法，如keySet()、entrySet()等方法。 keySet()方法返回值是Map中key值的集合；entrySet()的返回值也是返回一个Set集合，此集合的类型为Map.Entry。 Map.Entry是Map声明的一个内部接口，此接口为泛型，定义为Entry&lt;K,V&gt;。它表示Map中的一个实体（一个key-value对）。接口中有getKey(),getValue方法。 实例：import java.util.HashMap; import java.util.Iterator; import java.util.Map; public class mapEntryDemo { public static void main(String[] args) { Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); map.put(&quot;key1&quot;, &quot;value1&quot;); map.put(&quot;key2&quot;, &quot;value2&quot;); map.put(&quot;key3&quot;, &quot;value3&quot;); 第一种 通过map.keySet遍历key和value sop(&quot;通过map.keySet遍历key和value&quot;); for (String key : map.keySet()) { sop(&quot;key=&quot; + key + &quot;+ &quot; + &quot;: value=&quot;+map.get(key)); } 第二种 通过Map.entrySet使用iterator遍历key和value sop(&quot;通过Map.entrySet使用iterator遍历key和value&quot;); Iterator&lt;Map.Entry&lt;String,String&gt;&gt; it = map.entrySet().iterator(); while (it.hasNext()){ Map.Entry&lt;String,String&gt; entry = it.next(); sop(&quot;key=&quot;+entry.getKey()+&quot;+ value=&quot;+entry.getValue()); } 第三种 通过Map.entrySet遍历key和value sop(&quot;通过Map.entrySet遍历key和value&quot;); for (Map.Entry&lt;String,String&gt; entry:map.entrySet()){ sop(entry.getKey()+&quot;:&quot;+entry.getValue()); } 第四种 通过Map.values()遍历所有的value，但不遍历key sop(&quot;通过Map.values()遍历所有的value，但不遍历key&quot;); for (String v : map.values()) { sop(&quot;value:&quot; + v); } 补充 sop private static void sop(Object s) { System.out.println(s); } } 转载原地址：java中Map及Map.Entry详解","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/tags/技术/"},{"name":"java","slug":"java","permalink":"/https://www.sakura521.cn/tags/java/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"Java 高级for循环 学习笔记","slug":"Java-高级for循环-学习笔记","date":"2020-02-25T07:05:34.000Z","updated":"2020-02-29T12:09:29.909Z","comments":true,"path":"2020/02/25/javafor.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/25/javafor.html","excerpt":"","text":"高级for循环格式：for(数据类型 变量名：被遍历的集合(Collection)或者数组){} 对集合进行遍历。 只能获取元素，但是不能对集合进行操作。 注意：迭代器)除了遍历，还可以进行remove集合中元素的动作。 如果使用Listlerator,还可以在遍历的过程中对集合进行增删改查的动作。 区别：传统for循环和高级for循环的区别 高级for有一个局限性。必须有被遍历的目标。 建议：在遍历数组的时候，还是希望使用传统for，因为传统for可以定义脚标。 实例：import java.util.ArrayList; import java.util.HashMap; import java.util.Map; import java.util.Set; public class ForEachDemo { public static void main(String[] args) { ArrayList&lt;String&gt; al = new ArrayList&lt;String&gt;(); al.add(&quot;add1&quot;); al.add(&quot;add2&quot;); al.add(&quot;add3&quot;); for (String s : al) { System.out.println(s); } System.out.println(al); HashMap&lt;Integer, String&gt; hm = new HashMap&lt;Integer, String&gt;(); hm.put(1, &quot;hello1&quot;); hm.put(3, &quot;hello3&quot;); hm.put(2, &quot;hello2&quot;); hm.put(4, &quot;hello4&quot;); Set&lt;Integer&gt; set = hm.keySet(); for (Integer i : set) { sop(i + &quot;..&quot; + hm.get(i)); } Set&lt;Map.Entry&lt;Integer, String&gt;&gt; set1 = hm.entrySet(); for (Map.Entry&lt;Integer, String&gt; me : set1) { Integer key = me.getKey(); String value = me.getValue(); sop(key + &quot;: &quot; + value); } } private static void sop(Object s) { System.out.println(s); } }","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/tags/技术/"},{"name":"java","slug":"java","permalink":"/https://www.sakura521.cn/tags/java/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"live 2d 看板娘 官方文档","slug":"live-2d-看板娘","date":"2020-02-21T06:17:16.000Z","updated":"2020-02-29T12:09:57.019Z","comments":true,"path":"2020/02/21/live2D.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/21/live2D.html","excerpt":"","text":"Live2D Widget 特性 Feature在网页中添加 Live2D 看板娘。兼容 PJAX，支持无刷新加载。Add Live2D widget to web page. Compatible with PJAX. 警告：本项目使用了大量 ES6 语法，且依赖于 WebGL。不支持 IE 11 等老旧浏览器。WARNING: This project does not support legacy browsers such as IE 11. 示例 Demo在米米的博客的左下角可查看效果。 这个仓库中也提供了两个 Demo，即 demo1.html ，展现基础效果 demo2.html ，仿 NPM 的登陆界面 依赖 Dependencies本插件需要 Font Awesome 4.7.0 支持，请确保相关样式表已在页面中加载，例如在 &lt;head&gt; 中加入：Font Awesome 4.7.0 is required for this plugin. You can add this to &lt;head&gt;: &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;&gt; 否则无法正常显示。（如果网页中已经加载了 Font Awesome，就不要重复加载了） 使用 Usage将这一行代码加入 &lt;head&gt; 或 &lt;body&gt;，即可展现出效果： &lt;script src=&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt; 如果网站启用了 PJAX，由于看板娘不必每页刷新，因此要注意将相关脚本放到 PJAX 刷新区域之外。 换句话说，如果你是小白，或者只需要最基础的功能，就只用把这一行代码，连同前面加载 Font Awesome 的一行代码，一起放到 html 的 &lt;head&gt; 中即可。对于用各种模版引擎（例如 Nunjucks，Jinja 或者 PHP）生成的页面，也要自行修改，方法类似，只是可能略为麻烦。以 Hexo 为例，需要在主题相关的 ejs 或 njk 模版中正确配置路径，才可以加载。 但是！我们强烈推荐自己进行配置，否则很多功能是不完整的，并且可能产生问题！如果你有兴趣自己折腾的话，请看下面的详细说明。 Using CDN要自定义有关内容，可以把这个仓库 Fork 一份，然后进行修改。这时，使用方法对应地变为 &lt;script src=&quot;https://cdn.jsdelivr.net/gh/username/live2d-widget@latest/autoload.js&quot;&gt;&lt;/script&gt; 将 username 替换为你的 GitHub 用户名即可。 Self-host你也可以直接把这些文件放到服务器上，而不是通过 CDN 加载。 如果你能够通过 ssh 访问你的主机，请把整个仓库克隆到服务器上。执行： cd /path/to/your/webroot # Clone this repository git clone https://github.com/stevenjoezhang/live2d-widget.git 如果你的主机无法用 ssh 连接（例如一般的虚拟主机），请选择 Download ZIP，然后通过 ftp 等方式上传到主机上，再解压到网站的目录下。 如果你是通过 Hexo 等工具部署的静态博客，请在本地开命令行进入博客目录，例如 source 下与 _posts 同级的目录，然后再执行前述的 git clone 命令。重新部署博客时，相关文件就会自动上传到对应的路径下。 这样，整个项目就可以通过你的服务器 IP 或者域名从公网访问了。不妨试试能否正常地通过浏览器打开 autoload.js 和 live2d.min.js 等文件，并确认这些文件的内容是正确的，没有出现乱码。一切正常的话，接下来修改一些配置就行了。（需要通过服务器上的文本编辑器修改；你也可以先在本地完成这一步骤，再上传到服务器上）修改 autoload.js 中的常量 live2d_path 为 live2d-widget 这一文件夹在公网上的路径。比如说，如果你能够通过 https://www.example.com/path/to/live2d-widget/live2d.min.js 访问到 live2d.min.js，那么就把 live2d_path 的值修改为 https://www.example.com/path/to/live2d-widget/ 路径末尾的 / 一定要加上。具体可以参考 autoload.js 内的注释。完成后，在你要添加看板娘的界面加入 &lt;script src=&quot;https://www.example.com/path/to/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; 就可以加载了。 目录结构 Files waifu-tips.json 中包含了触发条件（selector，选择器）和触发时显示的文字（text）； waifu.css 是看板娘的样式表。 源文件是对 Hexo 的 NexT 主题有效的，为了适用于你自己的网页，可能需要自行修改，或增加新内容。警告：作者不对包括但不限于 waifu-tips.json 和 waifu-tips.js 文件中的内容负责，请自行确保它们是合适的。 如果有任何疑问，欢迎提 Issue。如果有任何修改建议，欢迎提 Pull Request。 鸣谢 Credits感谢 BrowserStack 容许我们在真实的浏览器中测试此项目。Thanks to BrowserStack for allowing us to test this project in real browsers. 代码自这篇博文魔改而来：https://www.fghrsh.net/post/123.html 点击看板娘的纸飞机按钮时，会出现一个彩蛋，这来自于 WebsiteAsteroids。 更多 More更多内容可以参考：https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02https://github.com/xiazeyu/live2d-widget.jshttps://github.com/summerscar/live2dDemo 还可以自行搭建后端 API，并增加模型（需要修改的内容比较多，此处不再赘述）：https://github.com/fghrsh/live2d_apihttps://github.com/xiazeyu/live2d-widget-modelshttps://github.com/xiaoski/live2d_models_collection 除此之外，还有桌面版本：https://github.com/amorist/platelethttps://github.com/akiroz/Live2D-Widget 许可证 LicenseReleased under the GNU General Public License v3http://www.gnu.org/licenses/gpl-3.0.html 本仓库中涉及的所有 Live2D 模型、图片、动作数据等版权均属于其原作者，仅供研究学习，不得用于商业用途。 Live2D 官方网站：https://www.live2d.com/en/https://live2d.github.io Live2D Cubism Core は Live2D Proprietary Software License で提供しています。https://www.live2d.com/eula/live2d-proprietary-software-license-agreement_en.htmlLive2D Cubism Components は Live2D Open Software License で提供しています。http://www.live2d.com/eula/live2d-open-software-license-agreement_en.html The terms and conditions do prohibit modification, but obfuscating in live2d.min.js would not be considered illegal modification. https://community.live2d.com/discussion/140/webgl-developer-licence-and-javascript-question 更新 Update2018年10月31日，由 fghrsh 提供的原 API 停用，请更新至新地址。参考文章：https://www.fghrsh.net/post/170.html 2020年1月1日起，本项目不再依赖于 jQuery。","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"Hexo 常用命令","slug":"Hexo-常用命令","date":"2020-02-21T02:22:16.000Z","updated":"2020-02-29T12:08:22.651Z","comments":true,"path":"2020/02/21/hexo.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/21/hexo.html","excerpt":"","text":"常用命令npm install hexo -g #安装Hexonpm update hexo -g #升级hexo init #初始化博客 命令简写hexo n “我的博客” == hexo new “我的博客” #新建文章hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署 hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"测试，我的第一篇文章","slug":"测试，我的第一篇文章","date":"2020-02-20T12:15:44.000Z","updated":"2020-02-29T12:12:13.300Z","comments":true,"path":"2020/02/20/Firstpost.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/20/Firstpost.html","excerpt":"","text":"这是我的第一篇文章进行测试测试","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/https://www.sakura521.cn/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"/https://www.sakura521.cn/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-02-20T08:13:25.127Z","updated":"2020-02-29T12:07:18.324Z","comments":true,"path":"2020/02/20/helloword.html","link":"","permalink":"/https://www.sakura521.cn/2020/02/20/helloword.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本","date":"2018-12-12T14:16:01.000Z","updated":"2020-02-29T12:07:46.877Z","comments":true,"path":"2018/12/12/Sakura2.html","link":"","permalink":"/https://www.sakura521.cn/2018/12/12/Sakura2.html","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/https://www.sakura521.cn/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"/https://www.sakura521.cn/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2020-02-29T12:08:05.911Z","comments":true,"path":"2018/12/12/sakura.html","link":"","permalink":"/https://www.sakura521.cn/2018/12/12/sakura.html","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/https://www.sakura521.cn/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"/https://www.sakura521.cn/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/https://www.sakura521.cn/categories/技术/"}]}]}